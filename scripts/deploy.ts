import { ethers } from "hardhat";

// WARN: the recipient and fromToken cannot be changed after deploy
const fromToken = "c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"; // WETH - fromToken (without 0x)
const afterSwapRecipient = "afafafafafafafafafafafafafafafafafafafaf"; // (without 0x)

const bytecode = `6101718061004d343933346009015273${fromToken}3481816061015260bc015273${afterSwapRecipient}3461010a015234f3fe3d341161014957337f000000000000000000000000000000000000000000000000000000000000000014610030575b005b368060351461008b57600e1461004257005b63a9059cbb60e01b3490815233600452803560901c60245280604481807f00000000000000000000000000000000000000000000000000000000000000005af161002e575b3434fd5b5042343560e01c106100875760043560601c63a9059cbb60e01b34528060045260183560901c6024523434604434347f00000000000000000000000000000000000000000000000000000000000000005af1156100875763022c0d9f60e01b345261010534603435116100fd8161014d565b60045261015f565b6024527f0000000000000000000000000000000000000000000000000000000000000000604452608060645234608452349060a43491349034905af161002e573434fd5b3d3dfd5b15610156573490565b60263560901c90565b1561016d5760263560901c90565b349056`;

async function main() {
  /// deployer === owner, cannot be changed later
  const [deployer] = await ethers.getSigners();

  const factory = new ethers.ContractFactory([], bytecode, deployer);
  const swapYulContract = await factory.deploy();
  await swapYulContract.deployed();

  console.log(swapYulContract.address);
}

main().catch((error) => {
  console.error(error);
  process.exitCode = 1;
});
